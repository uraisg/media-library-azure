name: Build and Test

on:
  push:
    branches: [ master ]
    paths:
    - 'internet-webapp/**'
    - 'intranet-webapp/**'
  pull_request:
    branches: [ master ]
    paths:
    - 'internet-webapp/**'
    - 'intranet-webapp/**'

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      internet: ${{ steps.filter.outputs.internet }}
      intranet: ${{ steps.filter.outputs.intranet }}
    steps:
    - uses: actions/checkout@v3.5.0
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          internet:
            - 'internet-webapp/**'
          intranet:
            - 'intranet-webapp/**'

  # JOB to build and test internet-facing code
  internet:
    needs: changes
    if: ${{ needs.changes.outputs.internet == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.5.0
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '3.1.x'
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v3
      with:
        path: ./.sonar/scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run: |
        mkdir -p ./.sonar/scanner
        dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
    - name: Build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ./.sonar/scanner/dotnet-sonarscanner begin /k:"uraisg_media-library-azure_internet" /o:"uraisg" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet build internet-webapp/MediaLibrary.Internet.sln --configuration Release
        ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
    - name: Test
      run: dotnet test internet-webapp/MediaLibrary.Internet.sln --no-build --verbosity normal --configuration Release

  # JOB to build and test intranet-facing code
  intranet:
    needs: changes
    if: ${{ needs.changes.outputs.intranet == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.5.0
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '3.1.x'
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v3
      with:
        path: ./.sonar/scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run: |
        mkdir -p ./.sonar/scanner
        dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
    - name: Build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ./.sonar/scanner/dotnet-sonarscanner begin /k:"uraisg_media-library-azure_intranet" /o:"uraisg" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet build intranet-webapp/MediaLibrary.Intranet.sln --configuration Release
        ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
    - name: Test
      run: dotnet test intranet-webapp/MediaLibrary.Intranet.sln --no-build --verbosity normal --configuration Release
