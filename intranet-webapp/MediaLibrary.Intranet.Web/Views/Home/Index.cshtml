@model MediaLibrary.Intranet.Web.Models.SearchData

@{
    ViewData["Title"] = "Home Page";
}

@section Styles {
    <link rel="stylesheet" href="~/css/media.css" />
}

@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{
    <table>
        <tr>
            <td></td>
            <td>
                <h1 class="sampleTitle">
                    <img src="~/images/azure-logo.png" width="80" />
                    Media Search
                </h1>
            </td>
        </tr>

        <tr>
            <td></td>
            <td>
                <!-- Display the search text box, with the search icon to the right of it.-->
                <div class="searchBoxForm">
                    @Html.TextBoxFor(m => m.SearchText, new { @class = "searchBox" }) <input value="" class="searchBoxSubmit" type="submit">
                </div>
            </td>
        </tr>

        <tr>
            <td valign="top">
                <div id="facetplace" class="facetchecks">

                    @if (Model != null && Model.ResultList != null)
                    {
                        List<string> locations = Model.ResultList.Facets["LocationName"].Select(x => x.Value.ToString()).ToList();

                        if (locations.Count > 0)
                        {
                            <h5 class="facetheader">Locations:</h5>
                            <ul class="facetlist">
                                @for (var i = 0; i < locations.Count; i++)
                                {
                                    var facetLink = $"{locations[i]} ({Model.ResultList.Facets["LocationName"][i].Count})";
                                    <li>
                                        @Html.ActionLink(facetLink, "Facet", "Home", new { locationFilter = $"LocationName eq '{locations[i]}'" }, null)
                                    </li>
                                }
                            </ul>
                        }

                        List<string> tag = Model.ResultList.Facets["Tag"].Select(x => x.Value.ToString()).ToList();

                        if (tag.Count > 0)
                        {
                            <h5 class="facetheader">Tags:</h5>
                            <ul class="facetlist">
                                @for (var i = 0; i < tag.Count; i++)
                                {
                                    var facetLink = $"{tag[i]} ({Model.ResultList.Facets["Tag"][i].Count})";
                                    <li>
                                        @Html.ActionLink(facetLink, "Facet", "Home", new { tagFilter = $"Tag/any(t: t eq '{tag[i]}')" }, null)
                                    </li>
                                }
                            </ul>
                        }
                    }
                </div>
            </td>
            <td valign="top">
                <div id="resultsplace">
                    @if (Model != null && Model.ResultList != null)
                    {
                        // Show the result count.
                        <p class="sampleText">
                            @Html.DisplayFor(m => m.ResultList.Count) Results
                        </p>

                        @for (var i = 0; i < Model.ResultList.Results.Count; i++)
                        {
                            string tag = string.Join(", ", Model.ResultList.Results[i].Document.Tag);

                            string fullDescription = Model.ResultList.Results[i].Document.Project;
                            fullDescription += $"\nLocation: {Model.ResultList.Results[i].Document.LocationName}";
                            fullDescription += $"\nTags: {tag}";

                            // Display the hotel name and description.
                            @Html.TextAreaFor(m => Model.ResultList.Results[i].Document.Name, new { @class = "box1" })
                            @Html.TextArea($"desc{i}", fullDescription, new { @class = "box2" })
                        }
                    }
                </div>
            </td>
        </tr>

        <tr>
            <td></td>
            <td valign="top">
                @if (Model != null && Model.PageCount > 1)
                {
                    // If there is more than one page of results, show the paging buttons.
                    <table>
                        <tr>
                            <td class="tdPage">
                                @if (Model.CurrentPage > 0)
                                {
                                    <p class="pageButton">
                                        @Html.ActionLink("|<", "Page", "Home", new { paging = "0" }, null)
                                    </p>
                                }
                                else
                                {
                                    <p class="pageButtonDisabled">|&lt;</p>
                                }
                            </td>

                            <td class="tdPage">
                                @if (Model.CurrentPage > 0)
                                {
                                    <p class="pageButton">
                                        @Html.ActionLink("<", "Page", "Home", new { paging = "prev" }, null)
                                    </p>
                                }
                                else
                                {
                                    <p class="pageButtonDisabled">&lt;</p>
                                }
                            </td>

                            @for (var pn = Model.LeftMostPage; pn < Model.LeftMostPage + Model.PageRange; pn++)
                            {
                                <td class="tdPage">
                                    @if (Model.CurrentPage == pn)
                                    {
                                        // Convert displayed page numbers to 1-based and not 0-based.
                                        <p class="pageSelected">@(pn + 1)</p>
                                    }
                                    else
                                    {
                                        <p class="pageButton">
                                            @Html.ActionLink((pn + 1).ToString(), "Page", "Home", new { paging = @pn }, null)
                                        </p>
                                    }
                                </td>
                            }

                            <td class="tdPage">
                                @if (Model.CurrentPage < Model.PageCount - 1)
                                {
                                    <p class="pageButton">
                                        @Html.ActionLink(">", "Page", "Home", new { paging = "next" }, null)
                                    </p>
                                }
                                else
                                {
                                    <p class="pageButtonDisabled">&gt;</p>
                                }
                            </td>

                            <td class="tdPage">
                                @if (Model.CurrentPage < Model.PageCount - 1)
                                {
                                    <p class="pageButton">
                                        @Html.ActionLink(">|", "Page", "Home", new { paging = Model.PageCount - 1 }, null)
                                    </p>
                                }
                                else
                                {
                                    <p class="pageButtonDisabled">&gt;|</p>
                                }
                            </td>
                        </tr>
                    </table>
                }
            </td>
        </tr>
    </table>
}